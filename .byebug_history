c
@ios_devices
c
@ios_devices
c
@ios_devices
c
PushDevice.find(platform: 'ios')
PushDevice.find_all(platform: 'ios')
PushDevice
@ios_devices
c
@ios_devices
c
@ios_devices
@devices.count
@devices
c
@devices
c
@devices.respond_to?(:count)
@devices.count
@devices.class
@devices
c
@devices.respond_to?(:count)
@devices.count
@devices.method_defined?(:count)
@devices
exit
article
up
articles
up
article
c
articles
up
article
up
down
article
up
upp
up
article
c
query_string.unpack("U*").map{|c| c.chr}.join.force_encoding(Encoding::ASCII_8BIT)
n
text
n
text
n
text
n
text
c
text
n
text
c
text
n
c
n
article['body']
text
n
text
n
text
n
text
n
text
n
text
n
c
text
n
text
n
c
article['body']
n
c
article['body']
n
article['body']
n
article['body']
n
article['body']
n
article['body']
n
article['body']
c
article['body']
n
article['body']
n
article['body']
n
article['body']
n
article['body']
n
article['body']
c
article['body']
n
article['body']
n
article['body']
c
text
c
text
c
image['url']
image
iage
c
base_url
continue
c
html_string.slice(tag[0]..tag[1])
c
html_string.slice(tag[0]..tag[1])
c
html_string.slice(tag[0]..tag[1])
c
html_string.slice(tag[0]..tag[1])
c
cc
c
html_string.slice(tag[0], tag[1])
html_string.slide(tag[0], tag[1])
tag
html_string
c
tag
c
tags
c
tags
c
tags
n
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
exit
article['headline]
lkjlkjlkfarticle['headline']
carticle['headline']
c
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
c
article['headline']
article
article['title']
n
html_string
continue
c
cc
c
params
c
string.gets
string
string = request.body
request.form_data?
request.body
params.body
params
body
c
dec
request.request_parameters
request.form_data?
request.header
request.params
request
params
continue
exit
article['body']
exit
html_fragment.scrub!(scrubber).to_s
html_fragment.scrub!(scrubber)
html_fragment
scrubbed
exit
scrubbed
exit
c
article['body']
n
article['body']
n
article['body']
n
article['body']
c
n
scrubbed
n
html_string
