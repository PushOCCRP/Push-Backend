c
response
exit
c
formatted_article
exit
c
n
c
n
exit
c
@response.keys
@response.class
c
articles['pagination']
articles.keys['pagination']
articles.keys
articles.class
articles
n
c
n
c
body[:items].class == Hash
body[:items].class == Hash.class
body[:items].class
body[:items]
c
article
c
body[:items].class
body[:items]
up
article.class
article
article['title']
c
body[:items]
up
articles.keys
article.all_keys
articles.class
articles[0]
articles.count
articles
up
article[1]
article[0]
article.count
article.class
article
article['title']
c
n
response['total_items']
response['total_items'[
n
c
body.keys
body.all_keys
body['items']
body
c
@response
c
@response
c
items.keys
items.kesy
items.all_keys
items
c
items
c
body
c
n
article
c
cc
n
url
up
article
c
artilce
c
article
c
<<<<<<< HEAD
response_json
c
notification.language
registration_ids
c
exit
exit5
registartion_ids
c
response_json
c
PushDevice.where(platform:"android").map{|device| device.status}
PushDevice.where(platform:"android").map{|device| device.dev_token}
PushDevice.where(platform:"Android").map{|device| device.dev_token}
PushDevice.where(platform:"ndroid").map{|device| device.dev_token}
PushDevice.where(platform:"ndroid").map{|device3| device.dev_token}
PushDevice.where(platform:"ndroid").map{|device3| de3vice.dev_token}
PushDevice.where(platform:"ndroid").map{|device3| de3vice.dev_tokent}
registration_ids
n
status
c
registration_ids
n
c
n
status
c
n
c
n
c
device
n
registration_id
n
c
registration_id
n
c
registration_id
n
c
response_json
c
response_json
c
response_json
n
c
response_json
n
c
response_json
n
options
c
n
c
params
c
n
c
cc
response_json
registration_ids
c
cc
device
n
device
n
c
registrration_ids
c
nc
n
params
prams
n
c
exit
n
params
prams
n
c
n
nn
n
c
registration_ids
response_json
c
registration_id
device
c
device
dvice
c
device.status = PushDevice::Status::DISABLED
device.status = 1
device.status
device
PushDevice::Status::DISABLED
device
c
n
c
response_json[:results]
response_json
c
n
c
n
c
n
response
c
n
c
response[:status_code]
response
c
options
n
c
optoins[:subscriber
options
c
options
n
c
options
c
registration_ids
regitration_ids
push_options
c
PushDevice.where(platform: "android").map{|device| device.id}
PushDevice.where(platform: "android").map{|device| device.dev_token}
PushDevice.where(platform: "android")
PushDevice.all
PushDevice
PushDeevice
n
c
options
push_options
c
registration_ids
exit
registrationids
registration_id
options
opotonis
push_options
c
options
c
options
push_options
c
options
optoins
