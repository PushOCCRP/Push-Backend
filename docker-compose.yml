version: '2'
services:

  # 
  # nginx, working as a front-end proxy for uniqush
  # we need it for only allowing certain endpoints to be available
  nginx:
      image: nginx
      ports:
          - "80:80"
          #- "60443:443"
      depends_on:
          - web
      volumes:
          - "./.docker/nginx/:/etc/nginx/:ro"                            # config
          #- "/srv/data/secrets/nginx/:/etc/ssl/nginx/:ro"                # this is where dhparam goes; TODO maybe we should use a data container for this
          #- "/srv/logs/gurac/:/srv/logs/gurac/"                          # logs
          #- "/srv/data/ssl/:/srv/data/ssl/:ro"                           # ssl certificates/keys data, including letsencrypt-generated certs

  db:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  web:
    build: .
    command: bundle exec rails s -p 3000 -b '0.0.0.0' --environment=production
    volumes:
      - .:/push
    expose:
      - "3000"
    depends_on:
      - db
    env_file:
      - ./secrets.env
    entrypoint: /push/entrypoint.sh

  # uniqush itself
  uniqush:
      build:
          context: docker-uniqush
      environment:
          # this is the default, but let's be explicit here
          UNIQUSH_DATABASE_HOST: "redis"
#          UNIQUSH_LOGFILE:       "/srv/logs/gurac/uniqush.log"
          UNIQUSH_LOGLEVEL:      "verbose"
          UNIQUSH_GID:           "60001"
          UNIQUSH_UID:           "60001"
      ports:
          - "9898:9898"
      depends_on:
          - redis
      volumes:
          - "./secrets:/secrets"
          #- "/srv/logs/gurac/:/srv/logs/gurac/"

  # the redis db server
  redis:
      image: redis
      volumes:
          - "./data:/data"
      command: ["redis-server", "--appendonly", "yes"]